// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/gateway/message_gateway.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	amqp091 "github.com/rabbitmq/amqp091-go"
	entity "github.com/sesaquecruz/go-chat-api/internal/domain/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockMessageGatewayInterface is a mock of MessageGatewayInterface interface.
type MockMessageGatewayInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMessageGatewayInterfaceMockRecorder
}

// MockMessageGatewayInterfaceMockRecorder is the mock recorder for MockMessageGatewayInterface.
type MockMessageGatewayInterfaceMockRecorder struct {
	mock *MockMessageGatewayInterface
}

// NewMockMessageGatewayInterface creates a new mock instance.
func NewMockMessageGatewayInterface(ctrl *gomock.Controller) *MockMessageGatewayInterface {
	mock := &MockMessageGatewayInterface{ctrl: ctrl}
	mock.recorder = &MockMessageGatewayInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageGatewayInterface) EXPECT() *MockMessageGatewayInterfaceMockRecorder {
	return m.recorder
}

// Receive mocks base method.
func (m *MockMessageGatewayInterface) Receive() (<-chan amqp091.Delivery, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Receive")
	ret0, _ := ret[0].(<-chan amqp091.Delivery)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Receive indicates an expected call of Receive.
func (mr *MockMessageGatewayInterfaceMockRecorder) Receive() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Receive", reflect.TypeOf((*MockMessageGatewayInterface)(nil).Receive))
}

// Send mocks base method.
func (m *MockMessageGatewayInterface) Send(ctx context.Context, message *entity.Message) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", ctx, message)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockMessageGatewayInterfaceMockRecorder) Send(ctx, message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockMessageGatewayInterface)(nil).Send), ctx, message)
}
