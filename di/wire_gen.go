// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
	"github.com/sesaquecruz/go-chat-api/config"
	"github.com/sesaquecruz/go-chat-api/internal/domain/gateway"
	"github.com/sesaquecruz/go-chat-api/internal/infra/database"
	"github.com/sesaquecruz/go-chat-api/internal/infra/web"
	"github.com/sesaquecruz/go-chat-api/internal/usecase"
)

// Injectors from wire.go:

func NewApiRouter(db *config.DatabaseConfig, api *config.APIConfig) *gin.Engine {
	sqlDB := database.DbConnection(db)
	roomGateway := database.NewRoomGateway(sqlDB)
	createRoomUseCase := usecase.NewCreateRoomUseCase(roomGateway)
	findRoomUseCase := usecase.NewFindRoomUseCase(roomGateway)
	updateRoomUseCase := usecase.NewUpdateRoomUseCase(roomGateway)
	deleteRoomUseCase := usecase.NewDeleteRoomUseCase(roomGateway)
	roomHandler := web.NewRoomHandler(createRoomUseCase, findRoomUseCase, updateRoomUseCase, deleteRoomUseCase)
	engine := web.ApiRouter(api, roomHandler)
	return engine
}

// wire.go:

var setRoomGatewayInterface = wire.NewSet(database.NewRoomGateway, wire.Bind(new(gateway.RoomGatewayInterface), new(*database.RoomGateway)))

var setCreateRoomUseCaseInterface = wire.NewSet(usecase.NewCreateRoomUseCase, wire.Bind(new(usecase.CreateRoomUseCaseInterface), new(*usecase.CreateRoomUseCase)))

var setFindRoomUseCaseInterface = wire.NewSet(usecase.NewFindRoomUseCase, wire.Bind(new(usecase.FindRoomUseCaseInterface), new(*usecase.FindRoomUseCase)))

var setUpdateRoomUseCaseInterface = wire.NewSet(usecase.NewUpdateRoomUseCase, wire.Bind(new(usecase.UpdateRoomUseCaseInterface), new(*usecase.UpdateRoomUseCase)))

var setDeleteRoomUseCaseInterface = wire.NewSet(usecase.NewDeleteRoomUseCase, wire.Bind(new(usecase.DeleteRoomUseCaseInterface), new(*usecase.DeleteRoomUseCase)))

var setRoomHandlerInterface = wire.NewSet(web.NewRoomHandler, wire.Bind(new(web.RoomHandlerInterface), new(*web.RoomHandler)))
