// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"database/sql"
	"github.com/google/wire"
	"github.com/sesaquecruz/go-chat-api/config"
	"github.com/sesaquecruz/go-chat-api/internal/domain/gateway"
	"github.com/sesaquecruz/go-chat-api/internal/infra/database"
	"github.com/sesaquecruz/go-chat-api/internal/infra/web"
	"github.com/sesaquecruz/go-chat-api/internal/infra/web/handler"
	"github.com/sesaquecruz/go-chat-api/internal/usecase"
)

// Injectors from wire.go:

func NewApiRouter(cfg *config.APIConfig, db *sql.DB) *web.ApiRouter {
	roomPostgresGateway := database.NewRoomPostgresGateway(db)
	createRoomUseCase := usecase.NewCreateRoomUseCase(roomPostgresGateway)
	roomHandler := handler.NewRoomHandler(createRoomUseCase)
	apiRouter := web.NewApiRouter(cfg, roomHandler)
	return apiRouter
}

// wire.go:

var setRoomGatewayInterface = wire.NewSet(database.NewRoomPostgresGateway, wire.Bind(new(gateway.RoomGatewayInterface), new(*database.RoomPostgresGateway)))

var setCreateRoomUseCaseInterface = wire.NewSet(usecase.NewCreateRoomUseCase, wire.Bind(new(usecase.CreateRoomUseCaseInterface), new(*usecase.CreateRoomUseCase)))

var setRoomHandlerInterface = wire.NewSet(handler.NewRoomHandler, wire.Bind(new(handler.RoomHandlerInterface), new(*handler.RoomHandler)))
